version: '3.4'

services:
  # DATABASES
  catalogdb:
    image: mongo

  basketdb:
    image: redis:alpine

  discountdb:
    image: postgres

  orderdb:
    image: mcr.microsoft.com/mssql/server

  userdb:
    image: mcr.microsoft.com/mssql/server

  rabbitmq:
    image: rabbitmq:3.12.12-management-alpine

  # API'S    
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  # discount.api:
  #   image: ${DOCKER_REGISTRY-}discountapi
  #   build:
  #     context: .
  #     dockerfile: services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  orderapigw:
    image: ${DOCKER_REGISTRY-}orderapigw
    build:
      context: .
      dockerfile: ApiGateways/OrderApiGw/Dockerfile

  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile

  aspnetrunbasics:
    image: ${DOCKER_REGISTRY-}aspnetrunbasics
    build:
      context: .
      dockerfile: WebApps/AspnetRunBasics/Dockerfile

  authentication.api:
    image: ${DOCKER_REGISTRY-}authenticationapi
    build:
      context: .
      dockerfile: Services/Authentication/Authentication.API/Dockerfile

volumes:
  mongo_data:
  postgres_data:








